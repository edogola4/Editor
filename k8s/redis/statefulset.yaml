apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: code-editor
    tier: cache
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: code-editor
      tier: cache
  template:
    metadata:
      labels:
        app: code-editor
        tier: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command: ["redis-server", "--appendonly", "yes", "--requirepass", "$(REDIS_PASSWORD)"]
        ports:
        - containerPort: 6379
          name: redis
        envFrom:
        - secretRef:
            name: redis-secrets
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app: code-editor
    tier: cache
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: code-editor
    tier: cache
  clusterIP: None
